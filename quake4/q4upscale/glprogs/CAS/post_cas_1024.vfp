#====================================================================== 
!!ARBfp1.0
# cgc version 3.1.0013, build date Apr 18 2012
# command line args: -quiet -profile arbfp1
# source file: cgfp_cas_1024.cg
#vendor NVIDIA Corporation
#version 3.1.0.13
#profile arbfp1
#program main
#semantic main.env : LOCAL0
#semantic main.diffuseImage : TEXUNIT0
#var float4 diffuseST : $vin.TEXCOORD0 : TEX0 : 0 : 1
#var float4 env : LOCAL0 :  : 1 : 0
#var sampler2D diffuseImage : TEXUNIT0 : texunit 0 : 2 : 1
#var float4 color : $vout.COLOR : COL : 3 : 1
#const c[0] = 1 0 -0.0013020834 -0.0009765625
#const c[1] = 0.0009765625 0 0.0013020834 -0.0013020834
#const c[2] = -0.0009765625 0.0013020834 2 -0.2
#const c[3] = 4
PARAM c[4] = { { 1, 0, -0.0013020834, -0.0009765625 },
		{ 0.0009765625, 0, 0.0013020834, -0.0013020834 },
		{ -0.0009765625, 0.0013020834, 2, -0.2 },
		{ 4 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
TEMP R8;
MOV R7.x, fragment.texcoord[0];
ADD R7.y, -fragment.texcoord[0], c[0].x;
ADD R1.xy, R7, c[1].yzzw;
TEX R4.xyz, R1, texture[0], 2D;
ADD R1.xy, R7, c[1];
TEX R3.xyz, R1, texture[0], 2D;
TEX R2.xyz, R7, texture[0], 2D;
ADD R5.zw, R7.xyxy, c[1].xyxw;
ADD R7.zw, R7.xyxy, c[1].xyxz;
ADD R0.xy, R7, c[0].yzzw;
TEX R0.xyz, R0, texture[0], 2D;
ADD R1.xy, R7, c[0].wyzw;
ADD R5.xy, R7, c[0].wzzw;
TEX R6.xyz, R5.zwzw, texture[0], 2D;
TEX R1.xyz, R1, texture[0], 2D;
MAX R0.w, R2.x, R3.x;
TEX R8.xyz, R7.zwzw, texture[0], 2D;
ADD R7.xy, R7, c[2];
TEX R7.xyz, R7, texture[0], 2D;
TEX R5.xyz, R5, texture[0], 2D;
MAX R1.w, R4.x, R0.x;
MAX R0.w, R1.x, R0;
MAX R0.w, R0, R1;
MAX R1.w, R5.x, R6.x;
MIN R3.w, R4.x, R0.x;
MAX R2.w, R7.x, R8.x;
MAX R1.w, R0, R1;
MAX R1.w, R1, R2;
ADD R0.w, R0, R1;
MIN R2.w, R2.x, R3.x;
MIN R2.w, R1.x, R2;
MIN R2.w, R2, R3;
MIN R3.w, R5.x, R6.x;
RCP R1.w, R0.w;
MIN R4.w, R7.x, R8.x;
MIN R3.w, R2, R3;
MIN R3.w, R3, R4;
ADD R4.w, -R0, c[2].z;
ADD R0.w, R2, R3;
MIN R0.w, R0, R4;
MUL_SAT R0.w, R0, R1;
RSQ R0.w, R0.w;
RCP R0.w, R0.w;
MUL R0.w, R0, c[2];
MUL R1.x, R0.w, R1;
MAD R0.x, R0.w, R0, R1;
MAX R1.x, R2.y, R3.y;
MAX R1.x, R1.y, R1;
MAX R1.w, R4.y, R0.y;
MAX R1.w, R1.x, R1;
MAX R1.x, R5.y, R6.y;
MAX R1.x, R1.w, R1;
MAX R2.w, R7.y, R8.y;
MAX R2.w, R1.x, R2;
MAD R1.x, R0.w, R3, R0;
ADD R0.x, R1.w, R2.w;
MAD R1.x, R4, R0.w, R1;
MIN R2.w, R2.y, R3.y;
ADD R1.x, R1, R2;
RCP R1.w, R0.x;
MIN R3.x, R4.y, R0.y;
MIN R2.w, R1.y, R2;
MIN R2.w, R2, R3.x;
MIN R3.x, R5.y, R6.y;
MIN R3.w, R7.y, R8.y;
MIN R3.x, R2.w, R3;
MIN R3.x, R3, R3.w;
ADD R3.w, -R0.x, c[2].z;
ADD R0.x, R2.w, R3;
MIN R0.x, R0, R3.w;
MUL_SAT R0.x, R0, R1.w;
RSQ R1.w, R0.x;
MUL R0.x, R0.w, c[3];
ADD R0.w, R0.x, c[0].x;
RCP R1.w, R1.w;
MUL R0.x, R1.w, c[2].w;
MUL R1.y, R1, R0.x;
MAD R0.y, R0, R0.x, R1;
RCP R0.w, R0.w;
MUL_SAT result.color.x, R1, R0.w;
MAD R0.y, R3, R0.x, R0;
MAD R0.y, R4, R0.x, R0;
MAX R0.w, R2.z, R3.z;
MUL R0.x, R0, c[3];
ADD R0.x, R0, c[0];
MAX R1.x, R4.z, R0.z;
MAX R0.w, R1.z, R0;
MAX R0.w, R0, R1.x;
MAX R1.x, R5.z, R6.z;
MAX R1.y, R7.z, R8.z;
MAX R1.x, R0.w, R1;
MAX R1.x, R1, R1.y;
ADD R1.w, R0, R1.x;
MIN R0.w, R2.z, R3.z;
MIN R1.x, R4.z, R0.z;
MIN R0.w, R1.z, R0;
MIN R0.w, R0, R1.x;
MIN R1.x, R5.z, R6.z;
MIN R1.y, R7.z, R8.z;
MIN R1.x, R0.w, R1;
MIN R1.x, R1, R1.y;
ADD R0.w, R0, R1.x;
ADD R1.y, -R1.w, c[2].z;
ADD R0.y, R2, R0;
RCP R0.x, R0.x;
MUL_SAT result.color.y, R0, R0.x;
RCP R2.x, R1.w;
MIN R0.w, R0, R1.y;
MUL_SAT R0.w, R0, R2.x;
RSQ R0.w, R0.w;
RCP R0.w, R0.w;
MUL R0.w, R0, c[2];
MUL R1.x, R1.z, R0.w;
MAD R0.x, R0.z, R0.w, R1;
MUL R0.y, R0.w, c[3].x;
MAD R0.x, R3.z, R0.w, R0;
ADD R0.y, R0, c[0].x;
MAD R0.x, R4.z, R0.w, R0;
RCP R0.y, R0.y;
ADD R0.x, R2.z, R0;
MUL_SAT result.color.z, R0.x, R0.y;
MOV result.color.w, c[0].x;
END
# 122 instructions, 9 R-regs
